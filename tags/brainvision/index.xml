<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>BrainVision | Pablo Bernabeu</title>
    <link>https://pablobernabeu.github.io/tags/brainvision/</link>
      <atom:link href="https://pablobernabeu.github.io/tags/brainvision/index.xml" rel="self" type="application/rss+xml" />
    <description>BrainVision</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-uk</language><copyright>Pablo Bernabeu, 2015—2024. Licence: [CC BY 4.0](https://creativecommons.org/licenses/by/4.0/). Email: pcbernabeu@gmail.com. No cookies operated by this website. Cookies only used by third-party systems such as [Disqus](https://help.disqus.com/en/articles/1717155-use-of-cookies).</copyright><lastBuildDate>Sat, 01 Jun 2024 00:00:00 +0000</lastBuildDate>
    <image>
      <url>https://pablobernabeu.github.io/img/default_preview_image.png</url>
      <title>BrainVision</title>
      <link>https://pablobernabeu.github.io/tags/brainvision/</link>
    </image>
    
    <item>
      <title>Preventing muscle artifacts in electroencephalography sessions</title>
      <link>https://pablobernabeu.github.io/2024/preventing-muscle-artifacts-in-electroencephalography-sessions/</link>
      <pubDate>Sat, 01 Jun 2024 00:00:00 +0000</pubDate>
      <guid>https://pablobernabeu.github.io/2024/preventing-muscle-artifacts-in-electroencephalography-sessions/</guid>
      <description>


&lt;p&gt;In psychological experiments, electroencephalographic (EEG) signals are often contaminated by muscle artifacts, such as blinks and jaw clenching, which generate electrical activity that can obscure the brain signals of interest. These artifacts typically manifest as large, abrupt changes in the EEG signal, complicating data interpretation and analysis. To reduce the likelihood of muscle artifacts, participants can be instructed during the preparatory phase of the session to minimize blinking and to keep their facial muscles relaxed. Furthermore, the design of the session can include intervention stages that allow experimenters to verify the quality of the live EEG signal before letting the session continue.&lt;/p&gt;
&lt;div id=&#34;participant-briefing&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Participant briefing&lt;/h2&gt;
&lt;div style=&#34;position: relative; margin-top: 20px; padding-top: 56.25%; margin-bottom: 30px;&#34;&gt;
&lt;iframe src=&#34;https://www.youtube-nocookie.com/embed/9Mbv6bUZlqY&#34; frameborder=&#34;0&#34; allowfullscreen style=&#34;position:absolute; top:0; left:0; width:100%; height:100%;&#34;&gt;
&lt;/iframe&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;signal-verification-stage&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Signal verification stage&lt;/h2&gt;
&lt;p&gt;Intervention stages allow the experimenters to verify the quality of the live EEG signal before letting the session continue. The following example includes an abbreviated reminder, &lt;span style=&#34;color: #B47DB6; background-color: orange;&#34;&gt; i.s.r &lt;/span&gt;, prompting the experimenter to verify the &lt;strong&gt;i&lt;/strong&gt;mpedance and the &lt;strong&gt;s&lt;/strong&gt;ignal before starting to &lt;strong&gt;r&lt;/strong&gt;ecord the signal.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#39;img/verification%20stage.png&#39; alt=&#39;Intervention screen in OpenSesame for experimenter to verify the quality of the electroencephalographic signal&#39; style=&#39;margin-top:2px; margin-bottom:-2px;&#39;&gt;&lt;/img&gt;&lt;/p&gt;
&lt;p&gt;Having completed these tasks, the experimenter presses the keys—unbeknownst to participants—that are needed to let the session continue. The screenshot below shows an example setup in OpenSesame, whereby the letter &lt;kbd&gt;C&lt;/kbd&gt; must be pressed twice to advance. The orange stripes flag up the need for the experimenter to intervene.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#39;img/OS%20verification%20stage.png&#39; alt=&#39;Intervention screen in OpenSesame for experimenter to verify the quality of the electroencephalographic signal&#39; style=&#39;margin-top:2px; margin-bottom:-2px;&#39;&gt;&lt;/img&gt;&lt;/p&gt;
&lt;p&gt;And repeat the message. It helps.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#39;img/verification%20stage%202.png&#39; alt=&#39;Intervention screen in OpenSesame for experimenter to verify the quality of the electroencephalographic signal&#39; style=&#39;margin-top:2px; margin-bottom:-2px;&#39;&gt;&lt;/img&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;outcome&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Outcome&lt;/h2&gt;
&lt;p&gt;The combination of verbal and written instructions, along with signal verification stages, helps obtain much cleaner EEG data, helping preserve more data in the &lt;a href=&#34;https://pablobernabeu.github.io/2020/event-related-potentials-why-and-how-i-used-them/#preprocessing-erps&#34;&gt;preprocessing&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>An inline script for OpenSesame to send EEG triggers via serial port</title>
      <link>https://pablobernabeu.github.io/2023/an-inline-script-for-opensesame-to-send-eeg-triggers-via-serial-port/</link>
      <pubDate>Sat, 09 Sep 2023 00:00:00 +0000</pubDate>
      <guid>https://pablobernabeu.github.io/2023/an-inline-script-for-opensesame-to-send-eeg-triggers-via-serial-port/</guid>
      <description>


&lt;p&gt;The &lt;a href=&#34;https://osdoc.cogsci.nl&#34;&gt;OpenSesame&lt;/a&gt; user base is skyrocketing but—of course—remains small in comparison to many other user bases that we are used to. Therefore, when developing an experiment in OpenSesame, there are still many opportunities to break the mould. When you need to do something beyond the standard operating procedure, it may take longer to find suitable resources than it takes when a more widespread tool is used. So, why would you still want to use OpenSesame? There are many reasons: it is free, open source, based on Python, stable enough thanks to more than a decade of usage and development, &lt;a href=&#34;https://github.com/open-cogsci/OpenSesame&#34;&gt;well maintained&lt;/a&gt;, and has a &lt;a href=&#34;https://forum.cogsci.nl&#34;&gt;community forum&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I recently faced a challenge when developing an EEG experiment that uses event-related potentials. I couldn’t find a way to send triggers through a &lt;em&gt;serial&lt;/em&gt; port. Online, I could find several resources, such as a &lt;a href=&#34;https://stonekate.github.io/blog/opensesame&#34;&gt;script by Kate Stone that draws on a parallel port&lt;/a&gt;, an &lt;a href=&#34;https://github.com/esdalmaijer/opensesame_serial_port_trigger&#34;&gt;outdated plugin that also draws on a parallel port&lt;/a&gt;, and resources based on Python scripts in &lt;a href=&#34;https://discourse.psychopy.org/t/sending-triggers-to-brainvision-eeg-system-from-psychopy-coderview/11011/11&#34;&gt;PsychoPy&lt;/a&gt; and in &lt;a href=&#34;https://pyserial.readthedocs.io/en/latest/shortintro.html&#34;&gt;base Python&lt;/a&gt;. By standing on these giants’ shoulders, and on even more shoulders from &lt;a href=&#34;https://stackoverflow.com/a/76829646/7050882&#34;&gt;StackOverflow&lt;/a&gt;, I put together the following inline script for OpenSesame. The code must be placed in the &lt;a href=&#34;https://osdoc.cogsci.nl/4.0/manual/python/about/#inline_script-items&#34;&gt;&lt;code&gt;Prepare&lt;/code&gt; phase&lt;/a&gt;. The &lt;code&gt;Run&lt;/code&gt; phase can be empty.&lt;/p&gt;
&lt;p&gt;This script is used to set up the system for sending triggers to the EEG recording software (e.g., BrainVision Recorder). The code automatically looks for an available serial port at the beginning of the session. If there are any available ports, a connection is established to the first port in the list. If there are no available ports, no connection is established, and a warning is shown on the screen, informing the user that no triggers will be sent to the EEG recorder. In the latter case, the triggers are only printed in the OpenSesame console.&lt;/p&gt;
&lt;script src=&#34;https://emgithub.com/embed-v2.js?target=https%3A%2F%2Fgithub.com%2Fpablobernabeu%2FEEG-tools-and-tips%2Fblob%2Fmain%2FOpenSesame_inline_script_to_send_EEG_triggers_via_serial_port%23L12-L300&amp;style=a11y-dark&amp;type=code&amp;showLineNumbers=on&amp;showFileMeta=on&amp;showCopy=on&#34;&gt;&lt;/script&gt;
</description>
    </item>
    
    <item>
      <title>How to correctly encode triggers in Python and send them to BrainVision through serial port (useful for OpenSesame and PsychoPy)</title>
      <link>https://pablobernabeu.github.io/2023/encode-triggers-in-python-and-send-them-to-brainvision-through-serial-port-useful-for-opensesame-and-psychopy/</link>
      <pubDate>Thu, 17 Aug 2023 00:00:00 +0000</pubDate>
      <guid>https://pablobernabeu.github.io/2023/encode-triggers-in-python-and-send-them-to-brainvision-through-serial-port-useful-for-opensesame-and-psychopy/</guid>
      <description>


</description>
    </item>
    
    <item>
      <title>EEG error: datasets missing channels</title>
      <link>https://pablobernabeu.github.io/2016/eeg-error-datasets-missing-channels/</link>
      <pubDate>Tue, 16 Aug 2016 00:00:00 +0000</pubDate>
      <guid>https://pablobernabeu.github.io/2016/eeg-error-datasets-missing-channels/</guid>
      <description>


</description>
    </item>
    
  </channel>
</rss>
