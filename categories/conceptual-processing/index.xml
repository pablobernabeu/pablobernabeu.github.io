<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>conceptual processing | Pablo Bernabeu</title>
    <link>https://pablobernabeu.github.io/categories/conceptual-processing/</link>
      <atom:link href="https://pablobernabeu.github.io/categories/conceptual-processing/index.xml" rel="self" type="application/rss+xml" />
    <description>conceptual processing</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-uk</language><copyright>© Pablo Bernabeu, 2021 — [CC BY Attribution licence](https://creativecommons.org/licenses/by/4.0/). Cookies may be used by external services such as [Disqus](https://help.disqus.com/en/articles/1717155-use-of-cookies); none set by the author of this website.</copyright><lastBuildDate>Wed, 01 Jan 2020 00:00:00 +0000</lastBuildDate>
    <image>
      <url>https://pablobernabeu.github.io/img/pablobernabeu_image_sharing.png</url>
      <title>conceptual processing</title>
      <link>https://pablobernabeu.github.io/categories/conceptual-processing/</link>
    </image>
    
    <item>
      <title>Investigating object orientation effects across 14 languages</title>
      <link>https://pablobernabeu.github.io/publication/chen-etal-inprep/</link>
      <pubDate>Wed, 01 Jan 2020 00:00:00 +0000</pubDate>
      <guid>https://pablobernabeu.github.io/publication/chen-etal-inprep/</guid>
      <description>&lt;h4 id=&#34;nbsp-i-classfas-fa-eyeinbsp-a-hrefhttpsosfioh36wrvideo-demonstration-of-the-procedure-followed-in-our-laba&#34;&gt;  &lt;i class=&#34;fas fa-eye&#34;&gt;&lt;/i&gt;  &lt;a href=&#39;https://osf.io/h36wr/&#39;&gt;Video demonstration of the procedure followed in our lab&lt;/a&gt;&lt;/h4&gt;
&lt;h4 id=&#34;reference&#34;&gt;Reference&lt;/h4&gt;
&lt;div style = &#34;text-indent:-2em; margin-left:2em;&#34;&gt;
&lt;p&gt;Chen, S., Szabelska, A., Chartier, C. R., Kekecs, Z., Lynott, D., Bernabeu, P., … Schmidt, K. (2018). &lt;em&gt;Investigating object orientation effects across 14 languages&lt;/em&gt;. PsyArXiv. &lt;a href=&#34;https://doi.org/10.31234/osf.io/t2pjv/&#34;&gt;https://doi.org/10.31234/osf.io/t2pjv/&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Modality switch effects emerge early and increase throughout conceptual processing: evidence from ERPs</title>
      <link>https://pablobernabeu.github.io/publication/bernabeu-etal-2017/</link>
      <pubDate>Sat, 01 Jul 2017 00:00:00 +0000</pubDate>
      <guid>https://pablobernabeu.github.io/publication/bernabeu-etal-2017/</guid>
      <description>&lt;h3 id=&#34;bonus-a-conference-poster-with-further-analyses-nbspa-hrefhttpsmfrosfiorenderurlhttpsosfiodj52ndirect26moderender26actiondownload26moderenderi-classfas-fa-external-link-altia&#34;&gt;Bonus: a conference poster with further analyses  &lt;a href=&#39;https://mfr.osf.io/render?url=https://osf.io/dj52n/?direct%26mode=render%26action=download%26mode=render&#39;&gt;&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;style&gt;.embed-responsive{position:relative;height:100%;}.embed-responsive iframe{position:absolute;height:100%;}&lt;/style&gt;&lt;script&gt;window.jQuery || document.write(&#39;&lt;script src=&#34;//code.jquery.com/jquery-1.11.2.min.js&#34;&gt;\x3C/script&gt;&#39;) &lt;/script&gt;&lt;link href=&#34;https://mfr.osf.io/static/css/mfr.css&#34; media=&#34;all&#34; rel=&#34;stylesheet&#34;&gt;&lt;div id=&#34;mfrIframe&#34; class=&#34;mfr mfr-file&#34;&gt;&lt;/div&gt;&lt;script src=&#34;https://mfr.osf.io/static/js/mfr.js&#34;&gt;&lt;/script&gt; &lt;script&gt;var mfrRender = new mfr.Render(&#34;mfrIframe&#34;, &#34;https://mfr.osf.io/render?url=https://osf.io/dj52n/?direct%26mode=render%26action=download%26mode=render&#34;);&lt;/script&gt;
&lt;h3 id=&#34;reference&#34;&gt;Reference&lt;/h3&gt;
&lt;div style = &#34;text-indent:-2em; margin-left:2em;&#34;&gt;
&lt;p&gt;Bernabeu, P., Willems, R. M., &amp;amp; Louwerse, M. M. (2017). Modality switch effects emerge early and increase throughout conceptual processing: Evidence from ERPs. In G. Gunzelmann, A. Howes, T. Tenbrink, &amp;amp; E. J. Davelaar (Eds.), &lt;em&gt;Proceedings of the 39th Annual Conference of the Cognitive Science Society&lt;/em&gt; (pp. 1629-1634). Austin, TX: Cognitive Science Society. &lt;a href=&#34;https://mindmodeling.org/cogsci2017/papers/0318/&#34;&gt;https://mindmodeling.org/cogsci2017/papers/0318/&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Modality switches occur early and extend late in conceptual processing: evidence from ERPs [Master&#39;s thesis]</title>
      <link>https://pablobernabeu.github.io/publication/bernabeu-2017-mphil-thesis/</link>
      <pubDate>Thu, 30 Mar 2017 00:00:00 +0000</pubDate>
      <guid>https://pablobernabeu.github.io/publication/bernabeu-2017-mphil-thesis/</guid>
      <description>&lt;a href=&#39;https://psyarxiv.com/5gjvk/download/&#39;&gt;
      &lt;button style = &#34;background-color: white; color: black; border: 2px solid #4CAF50; border-radius: 12px;&#34;&gt;
      &lt;h3 style = &#34;margin-top: 7px !important; margin-left: 9px !important; margin-right: 9px !important;&#34;&gt; 
      &lt;span style=&#34;color:#DBE6DA;&#34;&gt;&lt;i class=&#34;fas fa-mouse-pointer&#34;&gt;&lt;/i&gt;&lt;/span&gt;&amp;nbsp; Download thesis &lt;/h3&gt;&lt;/button&gt;&lt;/a&gt; &amp;nbsp;
&lt;br&gt;
&lt;h3 id=&#34;reference&#34;&gt;Reference&lt;/h3&gt;
&lt;div style = &#34;text-indent:-2em; margin-left:2em;&#34;&gt;
&lt;p&gt;Bernabeu, P. (2017). &lt;em&gt;Modality switches occur early and extend late in conceptual
processing: evidence from ERPs&lt;/em&gt; [Master&#39;s thesis]. School of Humanities, Tilburg University. &lt;a href=&#34;https://psyarxiv.com/5gjvk&#34;&gt;https://psyarxiv.com/5gjvk&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;br&gt;
</description>
    </item>
    
    <item>
      <title>Modality switch effects emerge early and increase throughout conceptual processing: evidence from ERPs</title>
      <link>https://pablobernabeu.github.io/applications-and-dashboards/bernabeu-etal-2017-modalityswitch/</link>
      <pubDate>Sun, 01 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://pablobernabeu.github.io/applications-and-dashboards/bernabeu-etal-2017-modalityswitch/</guid>
      <description>&lt;a href=&#39;https://pablobernabeu.shinyapps.io/ERP-waveform-visualization_CMS-experiment/&#39;&gt;
      &lt;button style = &#34;background-color: white; color: black; border: 2px solid #4CAF50; border-radius: 12px;&#34;&gt;
      &lt;h3 style = &#34;margin-top: 7px !important; margin-left: 9px !important; margin-right: 9px !important;&#34;&gt; 
      &lt;span style=&#34;color:#DBE6DA;&#34;&gt;&lt;i class=&#34;fas fa-mouse-pointer&#34;&gt;&lt;/i&gt;&lt;/span&gt;&amp;nbsp; Dashboard &lt;/h3&gt;&lt;/button&gt;&lt;/a&gt; &amp;nbsp; 
&lt;a href=&#39;https://mybinder.org/v2/gh/pablobernabeu/Modality-switch-effects-emerge-early-and-increase-throughout-conceptual-processing/0a5542658914a6ed01cf8e96252c48bb5bcf8f18?urlpath=shiny/Shiny-app/&#39;&gt;
      &lt;button style = &#34;background-color: white; color: black; border: 2px solid #196F27; border-radius: 12px;&#34;&gt;
      &lt;h3 style = &#34;font-size:90%; margin-top: 7px !important; margin-left: 9px !important; margin-right: 9px !important;&#34;&gt; 
      &lt;span style=&#34;color:#DBE6DA;&#34;&gt;&lt;i class=&#34;fas fa-mouse-pointer&#34;&gt;&lt;/i&gt;&lt;/span&gt;&amp;nbsp; Alternative in case of downtime &lt;/h3&gt;&lt;/button&gt;&lt;/a&gt; &amp;nbsp; 
&lt;br&gt;
&lt;br&gt;
&lt;p&gt;&lt;strong&gt;Content&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The data is from a psychology experiment on the comprehension of words, in which electroencephalographic (EEG) responses were measured. The data are presented in plots spanning 800 milliseconds (the duration of word processing). The aim of this Shiny app is to facilitate the exploration of the data by researchers and the public. Users can delve into the different sections of the data. In a hierarchical order, these sections are groups of participants, individual participants, brain areas, and electrodes.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Shiny apps in science&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;By creating this app, I tried to reach beyond the scope of current &lt;em&gt;open science&lt;/em&gt;, which is often confined to files shared on data repositories. I believe that Shiny apps will become general practice in science within a few years (&lt;a href=&#34;http://www.research.lancs.ac.uk/portal/en/activities/presenting-data-interactively-online-using-r-shiny(c9ce06ac-987e-4141-9121-016f6ee6d16b).html&#34;&gt;see blog post or slides for more information&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Technical details&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I made use of tabs on the top of the dashboard in order to keep the side bar from having too many widgets. I adjusted the appearance of these tabs, and by means of &amp;lsquo;reactivity&amp;rsquo; conditions, also modified the inputs in the sidebar depending on the active tab.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;mainPanel(

	tags$style(HTML(&#39;
	    .tabbable &amp;gt; .nav &amp;gt; li &amp;gt; a                  		{background-color:white; color:#3E454E}
	    .tabbable &amp;gt; .nav &amp;gt; li &amp;gt; a:hover            		{background-color:#002555; color:white}
	    .tabbable &amp;gt; .nav &amp;gt; li[class=active] &amp;gt; a 		{background-color:#ECF4FF; color:black}
	    .tabbable &amp;gt; .nav &amp;gt; li[class=active] &amp;gt; a:hover	{background-color:#E7F1FF; color:black}
	&#39;)),

	tabsetPanel(id=&#39;tabvals&#39;,

            tabPanel(value=1, h4(strong(&#39;Group &amp;amp; Electrode&#39;)), br(), plotOutput(&#39;plot_GroupAndElectrode&#39;),
			h5(a(strong(&#39;See plots with 95% Confidence Intervals&#39;), href=&#39;https://osf.io/2tpxn/&#39;,
			target=&#39;_blank&#39;), style=&#39;text-decoration: underline;&#39;), 
			downloadButton(&#39;downloadPlot.1&#39;, &#39;Download HD plot&#39;), br(), br(),
			# EEG montage
			img(src=&#39;https://preview.ibb.co/n7qiYR/EEG_montage.png&#39;, height=500, width=1000)),

            tabPanel(value=2, h4(strong(&#39;Participant &amp;amp; Area&#39;)), br(), plotOutput(&#39;plot_ParticipantAndLocation&#39;),
			h5(a(strong(&#39;See plots with 95% Confidence Intervals&#39;), href=&#39;https://osf.io/86ch9/&#39;,
			target=&#39;_blank&#39;), style=&#39;text-decoration: underline;&#39;), 
			downloadButton(&#39;downloadPlot.2&#39;, &#39;Download HD plot&#39;), br(), br(),
			# EEG montage
			img(src=&#39;https://preview.ibb.co/n7qiYR/EEG_montage.png&#39;, height=500, width=1000)),

            tabPanel(value=3, h4(strong(&#39;Participant &amp;amp; Electrode&#39;)), br(), plotOutput(&#39;plot_ParticipantAndElectrode&#39;),
			br(), downloadButton(&#39;downloadPlot.3&#39;, &#39;Download HD plot&#39;), br(), br(),
			# EEG montage
			img(src=&#39;https://preview.ibb.co/n7qiYR/EEG_montage.png&#39;, height=500, width=1000)),

            tabPanel(value=4, h4(strong(&#39;OLD Group &amp;amp; Electrode&#39;)), br(), plotOutput(&#39;plot_OLDGroupAndElectrode&#39;),
			h5(a(strong(&#39;See plots with 95% Confidence Intervals&#39;), href=&#39;https://osf.io/dvs2z/&#39;,
			target=&#39;_blank&#39;), style=&#39;text-decoration: underline;&#39;), 
			downloadButton(&#39;downloadPlot.4&#39;, &#39;Download HD plot&#39;), br(), br(),
			# EEG montage
			img(src=&#39;https://preview.ibb.co/n7qiYR/EEG_montage.png&#39;, height=500, width=1000))
	),
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The data set was fairly large, considering the fact that it&#39;s hosted with the free plan. In order to lighten the processing, I split the data into various files, reducing the total size. Furthermore, I outsourced a particularly heavy set of plots (those with Confidence Intervals) to PDF files, to which I linked in the app.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;h5(a(strong(&#39;See plots with 95% Confidence Intervals&#39;), href=&#39;https://osf.io/dvs2z/&#39;,
			target=&#39;_blank&#39;), style=&#39;text-decoration: underline;&#39;),
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I also used web links to the published paper and raw data, as well as to the &lt;em&gt;server&lt;/em&gt; and &lt;em&gt;ui&lt;/em&gt; scripts. These files, along with the data, are publicly available &lt;a href=&#34;https://osf.io/97unm/&#34;&gt;in this repository&lt;/a&gt;; they may be accessed within the &amp;ldquo;Files&amp;rdquo; section, by opening the folders &amp;ldquo;ERPs&amp;rdquo; -&amp;gt; &amp;ldquo;Analyses of ERPs averaged across trials&amp;rdquo; -&amp;gt; &amp;ldquo;Shiny app&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;Another feature I added was the download button.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# From server.R script

spec_title = paste0(&#39;ERP waveforms for &#39;, input$var.Group, &#39; Group, Electrode &#39;, input$var.Electrodes.1, &#39; (negative values upward; time windows displayed)&#39;)

plot_GroupAndElectrode = ggplot(df2, aes(x=time, y=-microvolts, color=condition)) +
  geom_rect(xmin=160, xmax=216, ymin=7.5, ymax=-8, color = &#39;grey75&#39;, fill=&#39;black&#39;, alpha=0, linetype=&#39;longdash&#39;) +
  geom_rect(xmin=270, xmax=370, ymin=7.5, ymax=-8, color = &#39;grey75&#39;, fill=&#39;black&#39;, alpha=0, linetype=&#39;longdash&#39;) +
  geom_rect(xmin=350, xmax=550, ymin=8, ymax=-7.5, color = &#39;grey75&#39;, fill=&#39;black&#39;, alpha=0, linetype=&#39;longdash&#39;) +
  geom_rect(xmin=500, xmax=750, ymin=7.5, ymax=-8, color = &#39;grey75&#39;, fill=&#39;black&#39;, alpha=0, linetype=&#39;longdash&#39;) +
  geom_line(size=1, alpha = 1) + scale_linetype_manual(values=colours) +
  scale_y_continuous(limits=c(-8.38, 8.3), breaks=seq(-8,8,by=1), expand = c(0,0.1)) +
  scale_x_continuous(limits=c(-208,808),breaks=seq(-200,800,by=100), expand = c(0.005,0), labels= c(&#39;-200&#39;,&#39;-100 ms&#39;,&#39;0&#39;,&#39;100 ms&#39;,&#39;200&#39;,&#39;300 ms&#39;,&#39;400&#39;,&#39;500 ms&#39;,&#39;600&#39;,&#39;700 ms&#39;,&#39;800&#39;)) +
  ggtitle(spec_title) + theme_bw() + geom_vline(xintercept=0) +
  annotate(geom=&#39;segment&#39;, y=seq(-8,8,1), yend=seq(-8,8,1), x=-4, xend=8, color=&#39;black&#39;) +
  annotate(geom=&#39;segment&#39;, y=-8.2, yend=-8.38, x=seq(-200,800,100), xend=seq(-200,800,100), color=&#39;black&#39;) +
  geom_segment(x = -200, y = 0, xend = 800, yend = 0, size=0.5, color=&#39;black&#39;) +
  theme(legend.position = c(0.100, 0.150), legend.background = element_rect(fill=&#39;#EEEEEE&#39;, size=0),
	axis.title=element_blank(), legend.key.width = unit(1.2,&#39;cm&#39;), legend.text=element_text(size=17),
	legend.title = element_text(size=17, face=&#39;bold&#39;), plot.title= element_text(size=20, hjust = 0.5, vjust=2),
	axis.text.y = element_blank(), axis.text.x = element_text(size = 14, vjust= 2.12, face=&#39;bold&#39;, color = &#39;grey32&#39;, family=&#39;sans&#39;),
	axis.ticks=element_blank(), panel.border = element_blank(), panel.grid.major = element_blank(), 
	panel.grid.minor = element_blank(), plot.margin = unit(c(0.1,0.1,0,0), &#39;cm&#39;)) +
  annotate(&#39;segment&#39;, x=160, xend=216, y=-8, yend=-8, colour = &#39;grey75&#39;, size = 1.5) +
  annotate(&#39;segment&#39;, x=270, xend=370, y=-8, yend=-8, colour = &#39;grey75&#39;, size = 1.5) +
  annotate(&#39;segment&#39;, x=350, xend=550, y=-7.5, yend=-7.5, colour = &#39;grey75&#39;, size = 1.5) +
  annotate(&#39;segment&#39;, x=500, xend=750, y=-8, yend=-8, colour = &#39;grey75&#39;, size = 1.5) +
  scale_fill_manual(name = &#39;Context / Target trial&#39;, values=colours) +
  scale_color_manual(name = &#39;Context / Target trial&#39;, values=colours) +
  guides(linetype=guide_legend(override.aes = list(size=1.2))) +
   guides(color=guide_legend(override.aes = list(size=2.5))) +
# Print y axis labels within plot area:
  annotate(&#39;text&#39;, label = expression(bold(&#39;\u2013&#39; * &#39;3 &#39; * &#39;\u03bc&#39; * &#39;V&#39;)), x = -29, y = 3, size = 4.5, color = &#39;grey32&#39;, family=&#39;sans&#39;) +
  annotate(&#39;text&#39;, label = expression(bold(&#39;+3 &#39; * &#39;\u03bc&#39; * &#39;V&#39;)), x = -29, y = -3, size = 4.5, color = &#39;grey32&#39;, family=&#39;sans&#39;) +
  annotate(&#39;text&#39;, label = expression(bold(&#39;\u2013&#39; * &#39;6 &#39; * &#39;\u03bc&#39; * &#39;V&#39;)), x = -29, y = 6, size = 4.5, color = &#39;grey32&#39;, family=&#39;sans&#39;)

print(plot_GroupAndElectrode)

output$downloadPlot.1 &amp;lt;- downloadHandler(
	filename &amp;lt;- function(file){
	paste0(input$var.Group, &#39; group, electrode &#39;, input$var.Electrodes.1, &#39;, &#39;, Sys.Date(), &#39;.png&#39;)},
   	content &amp;lt;- function(file){
      		png(file, units=&#39;in&#39;, width=13, height=5, res=900)
      		print(plot_GroupAndElectrode)
      		dev.off()},
	contentType = &#39;image/png&#39;)
  } )
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;# From ui.R script

downloadButton(&#39;downloadPlot.1&#39;, &#39;Download HD plot&#39;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Rising to the challenge&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;My experience with Shiny has been so good I&#39;ve been sharing &lt;a href=&#34;https://pablobernabeu.github.io/2017/01/01/the-case-for-data-dashboards.-first-steps-with-r-shiny/&#34;&gt;my experience&lt;/a&gt;. Yet, on my first crawling days, I spent an eternity stuck with this elephant in my room: &amp;ldquo;μ&amp;rdquo;. This &lt;em&gt;μ&lt;/em&gt; letter (micro-souvenir from hell, as I later knew it), was part of the labels of my plots. All I knew was that I could not deploy the app online, even while I could perfectly launch it locally in my laptop. So, I wondered what use was to deploy locally if I couldn&#39;t publish the app?! Eventually, I read about UTF-8 encoding in one forum. Bless them forums. All I had to do was use &amp;ldquo;Âμ&amp;rdquo; instead of the single &amp;ldquo;μ&amp;rdquo;. A better option I found later was: &lt;code&gt;expression(&amp;quot;\u03bc&amp;quot;)&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Beyond encoding issues, I had a tough time embedding images. You know, the &amp;lsquo;www&amp;rsquo; folder&amp;hellip; To be honest, I still haven&#39;t handled the &amp;lsquo;www&amp;rsquo; way&amp;ndash;but where there&#39;s a will there&#39;s a way. I managed to include my images by uploading them to a website and then entering their URL in &amp;ldquo;img(src&amp;rdquo;, avoiding the use of folder paths.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;img(src=&amp;quot;https://preview.ibb.co/n7qiYR/EEG_montage.png 1&amp;quot;, height=500, width=1000)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Long after I had built the app, I added another image&amp;ndash;the &lt;em&gt;favicon&lt;/em&gt; (the little icon on the browser tab).&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;tags$head(tags$link(rel=&amp;quot;shortcut icon&amp;quot;, href=&amp;quot;https://image.ibb.co/fXUwzb/favic.png&amp;quot;)),  # web favicon
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;reference&#34;&gt;Reference&lt;/h3&gt;
&lt;div style = &#34;text-indent:-2em; margin-left:2em;&#34;&gt;
&lt;p&gt;Bernabeu, P., Willems, R. M., &amp;amp; Louwerse, M. M. (2017). Modality switch effects emerge early and increase throughout conceptual processing: Evidence from ERPs [Data dashboard]. Retrieved from &lt;a href=&#34;https://pablobernabeu.shinyapps.io/ERP-waveform-visualization_CMS-experiment/&#34;&gt;https://pablobernabeu.shinyapps.io/ERP-waveform-visualization_CMS-experiment/&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>
